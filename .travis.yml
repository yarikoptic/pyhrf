# vim ft=yaml
#
# travis-ci.org definition for PyHRF build (based on PyMVPA, based on
# nipype configuration which in turn was based on nipy)
#
# We pretend to be erlang because we need can't use the python support in
# travis-ci; it uses virtualenvs, they do not have numpy, scipy, matplotlib,
# and it is impractical to build them.  We do not use anaconda to get closer
# to real Debian-based deployments and test against releases present in Debian
# and NeuroDebian
language: erlang
env:
 global:
    - PY=python PYSUF='' DOCTESTS=--with-doctest
    # - PYTHON=python3 PYSUF=3 : python3-numpy not currently available
 matrix:
    - PYTHON=$PY
    - PYTHON="$PY -O" DOCTESTS=--with-doctest
    - COVERAGE="coverage run --rcfile=.travis_coveragerc" DOCTESTS=--with-doctest
before_install:
    # The ultimate one-liner setup for NeuroDebian repository
    - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
    - sudo apt-get install $PY-dev
    - travis_retry sudo apt-get install $PY-qt4 $PY-numpy $PY-scipy $PY-matplotlib $PY-nose $PY-nibabel
    # Do not install recommends for nipy/sympy -- too much bloat comes
    - travis_retry sudo apt-get install $PY-nipy $PY-sympy --no-install-recommends
    - travis_retry sudo apt-get install $PY-joblib $PY-sklearn
    # set non-interactive matplotlib backend to avoid issues related to $DISPLAY
    # not found
    - wget -q http://matplotlib.org/1.3.1/_static/matplotlibrc
    - sed -i.bak  's/^backend.*/backend:Agg/'   matplotlibrc
install:
    - python setup.py install --user
    - if [ ! -z "$COVERAGE" ]; then pip install --user -v coveralls; fi
script:
    - export PATH=$HOME/.local/bin:$PATH
    - export NOSETESTS=$(which nosetests)
    - eval   $COVERAGE $NOSETESTS -v pyhrf $DOCTESTS -s
after_success:
    - if [ ! -z "$COVERAGE" ]; then coveralls; fi
